###############################################################################
######################## Discovery and identification #########################
###############################################################################

# Short name of data stream, i.e. recorded parameter/variable
# Attribute: mandatory
# Input type: free text
short_name: 'insert_short_name'

# Community accepted name for data stream/parameter/variable, such as
# standard names from CF convention:
# http://cfconventions.org/Data/cf-standard-names/72/build/cf-standard-name-table.html
# Attribute: mandatory
# Input type: term from controlled vocabulary
standard_name: 'insert_standard_name'

# Long name of data stream
# Attribute: optional
# Input type: free text
long_name: 'insert_long_name'

# List of alternative names of data stream
# Attribute: recommended
# Input type: list of terms from controlled vocabularies
alt_name: ['alt_name_1', 'alt_name_2']

# Id of concept which defines recorded variable which is a part of vocabulary.
# For example, if data stream represents values of ‘wind direction’ the concept
# of wind direction is defined in NERC vocabulary under id WDIR.
# Accordingly, one should set concept_id=’WDIR’.
# Attribute: optional
# Input type: controlled string
concept_id: 'insert_concept_id'

# Resolvable URI to the metadata of the concept, which hold information such as
# concept definition. If use the above example of the wind direction concept,
# then URI for this concept is:
# http://vocab.nerc.ac.uk/collection/P09/current/WDIR/
# Attribute: optional
# Input type: fixed resolvable URI
concept_URI: 'insert_concept_URI'

# PID of dataset to which data stream belongs to
# Attribute: optional
# Input type: fixed resolvable PID
is_part_of: 'insert_dataset_PID'

# List of short_name to other variables in the dataset to which the current
# variable is related to
# Attribute: optional
# Input type: fixed terms from the current dataset
is_related_to: ['short_name_1', 'short_name_2']


###############################################################################
############################# Values and units ################################
###############################################################################

# Type of data stored in the variables
# Attribute: mandatory
# Input type: term from controlled vocabulary [str,int, float or double]
dtype: 'insert_data_type'

# Units for values of variable
# Attribute: mandatory
# Input type: string representing canonical units
units: 'insert_units'

# Minimum allowed/expected value of the data stream
# Attribute: optional
# Input type: number
valid_min: 'insert_valid_min'

# Maximum allowed/expected value of the data stream
# Attribute: optional
# Input type: number
valid_max: 'insert_valid_max'

# A range of values of a given data stream expressed as [valid_min, valid_max]
# in case when the data stream takes any value between the given extremes.
# Attribute: optional
# Input type: list of numbers
valid_range: ['insert_valid_min', 'insert_valid_max']

# List of specific values that the variable can take.
# Attribute: optional
# Input type: list of numbers
allowed_values: ['value_1', 'value_2']

# Uncertainty of variable values. The uncertainty is expressed in same units
# as the variable itself.
# Attribute: optional
# Input type: number
uncertainty: 'insert_uncertainty'

# Insert a value that will be used to fill in missing values of the variable.
# Fill values must be chosen according to the variable data type (int, float, double)
# typically it is set to NaN considering that the majority of our variables are floats
# Attribute: mandatory
# Input type: same as dtype
_FillValue: 'insert_FillValue'

# Offset value to be added to all the values of the variable.
# This is used to save space by switching from float to int for variable values.
# Attribute: mandatory
# Input type: number
add_offset: 'insert_offset'

# Scaling value to be multiplied to all the values of the variable.
# This is used to save space by switching from float to int for variable values.
# Attribute: mandatory
# Input type: number
scale_factor: 'insert_scale_factor'

# In case if compression is applied to data provide its type.
# Attribute: optional
# Input type: free text
compression_type:  'insert_compression_type'

# Level of compression applied to data.
# Attribute: optional
# Input type: free text
compression_level: 'insert_compression_level'


